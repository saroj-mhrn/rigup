// ---------------------------------------------------------===
// Grid generation
// ---------------------------------------------------------===

@import '../base/variables';


@mixin make-column($columns, $gutter-width) {
    width: percentage(($columns / $grid-count));
}

@mixin make-offset($columns, $gutter-width) {
    margin-left: percentage(($columns / $grid-count));
}

@mixin make-row($gutter-width){
    margin-left: ($gutter-width / -2);
    margin-right: ($gutter-width / -2);

    @if $gutter-width != $gutter-width-mobile {
        @include media('<tablet') {
            margin-left: $gutter-width-mobile / -2;
            margin-right: $gutter-width-mobile / -2;
        }
    }
}

@mixin make-gutter($gutter-width) {
    padding-left: ($gutter-width / 2);
    padding-right: ($gutter-width / 2);

    @if $gutter-width != $gutter-width-mobile {
        @include media('<tablet') {
            padding-left: $gutter-width-mobile / 2;
            padding-right: $gutter-width-mobile / 2;
        }
    }
}

@mixin make-grid-columns($i: 1, $list: ".col-xs-#{$i}, .col-xls-#{$i}, .col-sm-#{$i}, .col-md-#{$i}, .col-lg-#{$i}") {
    @for $i from (1 + 1) through $grid-count {
        $list: "#{$list}, .col-xs-#{$i}, .col-xls-#{$i}, .col-sm-#{$i}, .col-md-#{$i}, .col-lg-#{$i}";
    }

    #{$list} {
        @include make-gutter($gutter-width);
        position: relative;
        min-height: 1px;
        width: 100%;
    }

    @for $i from (1) through $grid-count {
        .#{col-xs}-#{$i} {
            @include make-column($i,20)
        }

        .#{col-xs-offset}-#{$i} {
            @include make-offset($i,20)
        }
    }

    @include media('>=phone') {
        @for $i from (1) through $grid-count {
            .#{col-xls}-#{$i} {
                @include make-column($i,20)
            }

            .#{col-xls-offset}-#{$i} {
                @include make-offset($i,20)
            }
        }
    }

    @include media('>=tablet') {
        @for $i from (1) through $grid-count {
            .#{col-sm}-#{$i} {
                @include make-column($i,20)
            }

            .#{col-sm-offset}-#{$i} {
                @include make-offset($i,20)
            }
        }
    }

    @include media('>=desktop') {
        @for $i from (1) through $grid-count {
            .#{col-md}-#{$i} {
                @include make-column($i,20)
            }

            .#{col-md-offset}-#{$i} {
                @include make-offset($i,20)
            }
        }
    }

    @include media('>=widescreen') {
        @for $i from (1) through $grid-count {
            .#{col-lg}-#{$i} {
                @include make-column($i,20)
            }

            .#{col-lg-offset}-#{$i} {
                @include make-offset($i,20)
            }
        }
    }

    .container{
        @include make-gutter($gutter-width);
        margin: 0 auto;
        max-width: ($container-width + $gutter-width);
    }

    .row {
        @include make-row($gutter-width);
        display: flex;
        flex-wrap: wrap;
    }

    .row-height {
        > [class*="col-"] {
            display: flex;
            flex-wrap: wrap;

            > * {
                width: 100%;
            }
        }
    }
}

@if ($usegrid == true) {
    @include make-grid-columns;

    // pull left
    .pull-left {
        float: left;
    }

    // pull right
    .pull-right {
        float: right;
    }
}
